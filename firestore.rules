rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // =====================================================================
    // Funciones de Ayuda (No cambian)
    // =====================================================================
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function userHasRole(expectedRole) {
      return isAuthenticated() && (
        (exists(/databases/$(database)/documents/usuarios_generales/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/usuarios_generales/$(request.auth.uid)).data.rol == expectedRole)
        ||
        (exists(/databases/$(database)/documents/prestadores/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/prestadores/$(request.auth.uid)).data.rol == expectedRole)
        ||
        (exists(/databases/$(database)/documents/comercios/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/comercios/$(request.auth.uid)).data.rol == expectedRole)
      );
    }

    function isProviderOrCommerce() {
      return isAuthenticated() && (
        (exists(/databases/$(database)/documents/prestadores/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/prestadores/$(request.auth.uid)).data.rol == 'prestador')
        ||
        (exists(/databases/$(database)/documents/comercios/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/comercios/$(request.auth.uid)).data.rol == 'comercio')
      );
    }

    // =====================================================================
    // REGLA MAESTRA PARA LOS CVs (Esta es la corrección)
    // =====================================================================
    // Esta única regla controla todo el acceso al grupo de colecciones 'cv'.
    match /{path=**}/cv/{cvId} {
      // Permite LEER si es un comercio/prestador O si es el dueño del CV.
      allow read: if isProviderOrCommerce() || (isAuthenticated() && request.auth.uid == resource.data.uid);

      // Permite ESCRIBIR (crear, editar, borrar) únicamente si es el dueño del CV.
      allow write: if isAuthenticated() && request.auth.uid == resource.data.uid;
    }


    // =====================================================================
    // Colecciones de Usuarios (Sin la regla específica de /cv/main)
    // =====================================================================
    match /usuarios_generales/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(userId) && request.resource.data.uid == userId && request.resource.data.rol == 'usuario';
      allow update: if isAuthenticated() && isOwner(userId) && request.resource.data.rol == resource.data.rol && request.resource.data.uid == resource.data.uid;
      allow delete: if isAuthenticated() && isOwner(userId);

      // La regla para /cv/main se elimina de aquí. Ya la maneja la regla maestra de arriba.

      match /notifications/{notificationId} {
        allow read: if isAuthenticated() && isOwner(userId);
        allow update: if isAuthenticated() && isOwner(userId);
        allow create: if false; // Managed by Cloud Functions
        allow delete: if false; // Managed by Cloud Functions
      }
      match /reviews_as_provider/{reviewId} {
        allow read: if true; // Reviews are public
        allow create: if isAuthenticated() && request.resource.data.authorId == request.auth.uid;
        allow update: if isAuthenticated() && resource.data.authorId == request.auth.uid;
        allow delete: if isAuthenticated() && resource.data.authorId == request.auth.uid;
      }
      match /reviews_as_user/{reviewId} {
        allow read: if true; // Reviews are public
        allow create: if isAuthenticated() && request.resource.data.authorId == request.auth.uid;
        allow update: if isAuthenticated() && resource.data.authorId == request.auth.uid;
        allow delete: if isAuthenticated() && resource.data.authorId == request.auth.uid;
      }
    }

    match /prestadores/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(userId) && request.resource.data.uid == userId && request.resource.data.rol == 'prestador';
      allow update: if isAuthenticated() && isOwner(userId) && request.resource.data.rol == resource.data.rol && request.resource.data.uid == resource.data.uid;
      allow delete: if isAuthenticated() && isOwner(userId);

      // La regla de /cv se elimina de aquí.
      
      match /notifications/{notificationId} {
        allow read: if isAuthenticated() && isOwner(userId);
        allow update: if isAuthenticated() && isOwner(userId);
        allow create: if false;
        allow delete: if false;
      }
      match /reviews_as_provider/{reviewId} {
        allow read: if true;
        allow create: if isAuthenticated() && request.resource.data.authorId == request.auth.uid;
        allow update: if isAuthenticated() && resource.data.authorId == request.auth.uid;
        allow delete: if isAuthenticated() && resource.data.authorId == request.auth.uid;
      }
      match /reviews_as_user/{reviewId} {
        allow read: if true;
        allow create: if isAuthenticated() && request.resource.data.authorId == request.auth.uid;
        allow update: if isAuthenticated() && resource.data.authorId == request.auth.uid;
        allow delete: if isAuthenticated() && resource.data.authorId == request.auth.uid;
      }
    }

    match /comercios/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(userId) && request.resource.data.uid == userId && request.resource.data.rol == 'comercio';
      allow update: if isAuthenticated() && isOwner(userId) && request.resource.data.rol == resource.data.rol && request.resource.data.uid == resource.data.uid;
      allow delete: if isAuthenticated() && isOwner(userId);
      
      // La regla de /cv se elimina de aquí.

      match /notifications/{notificationId} {
        allow read: if isAuthenticated() && isOwner(userId);
        allow update: if isAuthenticated() && isOwner(userId);
        allow create: if false;
        allow delete: if false;
      }
      match /reviews_as_provider/{reviewId} {
        allow read: if true;
        allow create: if isAuthenticated() && request.resource.data.authorId == request.auth.uid;
        allow update: if isAuthenticated() && resource.data.authorId == request.auth.uid;
        allow delete: if isAuthenticated() && resource.data.authorId == request.auth.uid;
      }
      match /reviews_as_user/{reviewId} {
        allow read: if true;
        allow create: if isAuthenticated() && request.resource.data.authorId == request.auth.uid;
        allow update: if isAuthenticated() && resource.data.authorId == request.auth.uid;
        allow delete: if isAuthenticated() && resource.data.authorId == request.auth.uid;
      }
    }

    // =====================================================================
    // OTRAS COLECCIONES (No cambian)
    // =====================================================================
    match /anuncios/{anuncioId} {
      allow read: if (resource.data.status == 'active') ||
                       (isAuthenticated() && resource.data.creatorId == request.auth.uid) ||
                       userHasRole('administrador');
      allow create: if isAuthenticated() &&
                         request.resource.data.creatorId == request.auth.uid &&
                         isProviderOrCommerce();
      allow update: if isAuthenticated() && resource.data.creatorId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.creatorId == request.auth.uid;

      match /capturas/{capturaId} {
        allow read: if (get(/databases/$(database)/documents/anuncios/$(anuncioId)).data.status == 'active') ||
                         (isAuthenticated() && get(/databases/$(database)/documents/anuncios/$(anuncioId)).data.creatorId == request.auth.uid);
        allow create: if isAuthenticated() &&
                           request.resource.data.creatorId == request.auth.uid &&
                           get(/databases/$(database)/documents/anuncios/$(anuncioId)).data.creatorId == request.auth.uid;
        allow update: if isAuthenticated() && get(/databases/$(database)/documents/anuncios/$(anuncioId)).data.creatorId == request.auth.uid;
        allow delete: if isAuthenticated() && get(/databases/$(database)/documents/anuncios/$(anuncioId)).data.creatorId == request.auth.uid;
      }
    }

    match /paginas_amarillas/{creatorId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == creatorId;
      allow update, delete: if request.auth != null && request.auth.uid == creatorId;
    }
  }
}